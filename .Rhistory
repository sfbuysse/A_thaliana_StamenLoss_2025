Harvest_3 <- Harvest_3 %>%
mutate(Trt = as.factor(Trt),
Flat = as.factor(Flat),
Pos = as.factor(Pos),
Who = as.factor(Who),
OOC = mdy(Harvest_2$OOC))
##### format data #####
Harvest_3 <- Harvest_3 %>%
mutate(Trt = as.factor(Trt),
Flat = as.factor(Flat),
Pos = as.factor(Pos),
Who = as.factor(Who),
OOC = dmy(paste0(Harvest_3$OOC, "-2024")))
ggplot(data = Harvest_1, aes(x = OOC))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
ggplot(data = Harvest_2, aes(x = OOC))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
ggplot(data = Harvest_3, aes(x = OOC))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
lb1 <- ggplot(data = Harvest_1, aes(x = LatBranch))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
lb1
lb2 <- ggplot(data = Harvest_2, aes(x = LatBranch))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
lb2
lb3 <- ggplot(data = Harvest_3, aes(x = LatBranch))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
lb3
ggplot(data = Harvest_1, aes(x = PrimStalks))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
ggplot(data = Harvest_2, aes(x = PrimStalks))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
ggplot(data = Harvest_3, aes(x = PrimStalks))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
ggplot(data = Harvest_1, aes(x = NumRos))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
ggplot(data = Harvest_2, aes(x = NumRos))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
ggplot(data = Harvest_3, aes(x = NumRos))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 1, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 1")+
theme_classic()
h1 <- ggplot(data = Harvest_1, aes(x = Height))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 5, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 5")+
theme_classic()
h1
h2 <- ggplot(data = Harvest_2, aes(x = Height))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 5, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 5")+
theme_classic()
h2
h3 <- ggplot(data = Harvest_3, aes(x = Height))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 5, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 5")+
theme_classic()
h3
tf1 <- ggplot(data = Harvest_1, aes(x = TotFruits))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 10, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 10")+
theme_classic()
tf1
tf2 <- ggplot(data = Harvest_2, aes(x = TotFruits))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 10, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 10")+
theme_classic()
tf2
tf3 <- ggplot(data = Harvest_3, aes(x = TotFruits))+
geom_histogram(aes(fill = Trt, color = Trt), binwidth = 10, position = 'identity', alpha = 0.2)+
scale_fill_manual(values = c("Green", "Red"))+
scale_color_manual(values = c("Green", "Red"))+
labs(title = "bin = 10")+
theme_classic()
tf3
dte <- ggarrange(ggarrange(dte1, dte2, dte3, ncol = 1, nrow = 3, common.legend = TRUE), dte_p)
View(Harvest_1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
ByFlwr <- read.csv("~/SpanishMasterDataset_ByFlwr.csv")
ByFlwr <- read.csv("C:\Users\Sophie\Michigan State University\Conner, Jeffrey - SophieAnalyses/SpanishMasterDataset_ByFlwr.csv")
ByFlwr <- read.csv("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/SpanishMasterDataset_ByFlwr.csv")
ByFlwr$Population <- as.factor(substr(ByFlwr$Population, start = 1, stop = 3))
ByFlwr$Matriline <- as.factor(ByFlwr$Matriline)
ByFlwr$Plant <- as.factor(ByFlwr$Plant)
ByFlwr$LineID <- as.factor(paste0(ByFlwr$Population, "-", ByFlwr$Matriline))
ByFlwr$PlantID <- as.factor(paste0(ByFlwr$LineID, "-", ByFlwr$Plant))
uids <- unique(ByFlwr$PlantID)
length(uids)
length(unique(ByFlwr$LineID))
# Make a unique ID for each flower in the dataset
flwr<-c()
for(i in 1:length(uids)){
len<-length(ByFlwr$PlantID[ByFlwr$PlantID==uids[i]])
flwr<-append(flwr,seq(1,len,1))
}
ByFlwr$flower<-flwr
ByFlwr$FlowerID <- paste0(ByFlwr$PlantID, "-", ByFlwr$flower)
dat_all <- ByFlwr[,c("Population", "LineID", "PlantID", "FlowerID", "NumShortStamens", "Notes")]
View(dat_all)
dat_all <- ByFlwr[,c("Population", "LineID", "PlantID", "FlowerID", "NumShortStamens", "Notes")]
# How many planting blocks?
length(unique(ByFlwr$PlantingBlock))
# How many unique lines?
length(unique(dat_all$LineID))
# How many lines per population?
PerPop <- dat_all %>% group_by(Population) %>%
summarize(NumLines = length(unique(LineID)), NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
# want flowers per pop info b/c that is what is used for population means
min(PerPop$NumFlwr)
# 42
max(PerPop$NumFlwr)
#168
mean(PerPop$NumFlwr)
# 88.9
median(PerPop$NumFlwr)
# How many Plants and Flowers per line?
PerLine <- dat_all %>% group_by(LineID) %>%
summarize(NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
min(PerLine$NumPlants)
# 1
max(PerLine$NumPlants)
# 4
mean(PerLine$NumPlants)
# 2.05
median(PerLine$NumPlants)
min(PerLine$NumFlwr)
# 1 -- only 1 flower for 1 plant for this line
# this is true for POB-10 and POB-19. both of them are also sequenced
max(PerLine$NumFlwr)
# 36 -- this represents 9 flowers per plant for 4 plants per line
mean(PerLine$NumFlwr)
# 12.7
median(PerLine$NumFlwr)
# what about flower per plant information?
PerPlant <- dat_all %>% group_by(PlantID) %>%
summarize(NumFlwr = length(unique(FlowerID)))
View(PerPlant)
# what about flower per plant information?
PerPlant <- dat_all %>% group_by(PlantID) %>%
summarize(NumFlwr = length(unique(FlowerID)), meanSSN = mean(NumShortStamens), sdSSN = sd(NumShortStamens))
View(PerPlant)
# 6
mean(PerPlant$sdSSN)
# 6
mean(PerPlant$sdSSN, na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
ByFlwr <- read.csv("data/SpanishMasterDataset_ByFlwr.csv")
# Tube is equivalent to the time point, so 1 is the first 10 ish flowers, 2 is from around the 20th flower produced, and 3 is around the 30th flower produced and that is why there are multiples from tube b/c multiple flowers collected at each time point
ByFlwr$Population <- as.factor(substr(ByFlwr$Population, start = 1, stop = 3))
ByFlwr$Matriline <- as.factor(ByFlwr$Matriline)
ByFlwr$Plant <- as.factor(ByFlwr$Plant)
ByFlwr$LineID <- as.factor(paste0(ByFlwr$Population, "-", ByFlwr$Matriline))
ByFlwr$PlantID <- as.factor(paste0(ByFlwr$LineID, "-", ByFlwr$Plant))
uids <- unique(ByFlwr$PlantID)
length(uids)
# 230 plants were phenotyped
# Make a unique ID for each flower in the dataset
flwr<-c()
for(i in 1:length(uids)){
len<-length(ByFlwr$PlantID[ByFlwr$PlantID==uids[i]])
flwr<-append(flwr,seq(1,len,1))
}
ByFlwr$flower<-flwr
ByFlwr$FlowerID <- paste0(ByFlwr$PlantID, "-", ByFlwr$flower)
dat_all <- ByFlwr[,c("Population", "LineID", "PlantID", "FlowerID", "NumShortStamens", "Notes")]
# How many planting blocks?
length(unique(ByFlwr$PlantingBlock))
# How many unique lines?
length(unique(dat_all$LineID))
# How many lines per population?
PerPop <- dat_all %>% group_by(Population) %>%
summarize(NumLines = length(unique(LineID)), NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
# there are 5 to 9 lines per pop
# want flowers per pop info b/c that is what is used for population means
min(PerPop$NumFlwr)
# 42
max(PerPop$NumFlwr)
#168
mean(PerPop$NumFlwr)
# 88.9
median(PerPop$NumFlwr)
#99.5
# How many Plants and Flowers per line?
PerLine <- dat_all %>% group_by(LineID) %>%
summarize(NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
min(PerLine$NumPlants)
# 1
max(PerLine$NumPlants)
# 4
mean(PerLine$NumPlants)
# 2.05
median(PerLine$NumPlants)
# 2
min(PerLine$NumFlwr)
# 1 -- only 1 flower for 1 plant for this line
# this is true for POB-10 and POB-19. both of them are also sequenced
max(PerLine$NumFlwr)
# 36 -- this represents 9 flowers per plant for 4 plants per line
mean(PerLine$NumFlwr)
# 12.7
median(PerLine$NumFlwr)
# 10
# what about flower per plant information?
PerPlant <- dat_all %>% group_by(PlantID) %>%
summarize(NumFlwr = length(unique(FlowerID)), meanSSN = mean(NumShortStamens), sdSSN = sd(NumShortStamens))
min(PerPlant$NumFlwr)
# 1
max(PerPlant$NumFlwr)
# 9
mean(PerPlant$NumFlwr)
# 6.2
median(PerPlant$NumFlwr)
# 6
mean(PerPlant$sdSSN, na.rm = TRUE)
# 0.368523
Seq <- read.csv("data/SpanishMasterDataset_Sequenced.csv")
# Reminder! Tube is equivalent to the time point, so 1 is the first 10 ish flowers, 2 is from around the 20th flower produced, and 3 is around the 30th flower produced and that is why there are multiples from tube b/c multiple flowers collected at each time point
# here Rep is equivalent to what Plant was in the all dataset
Seq$Population <- as.factor(substr(Seq$Population, start = 1, stop = 3))
Seq$Line <- as.factor(Seq$Line)
Seq$Plant <- as.factor(toupper(Seq$Rep))
Seq$LineID <- as.factor(paste0(Seq$Population, "-", Seq$Line))
# should be equivalent to SeqSampleID
Seq$PlantID <- as.factor(paste0(Seq$LineID, "-", Seq$Plant))
uids <- unique(Seq$PlantID)
length(uids)
# 141 plants were phenotyped
# Make a unique ID for each flower in the dataset
flwr<-c()
for(i in 1:length(uids)){
len<-length(Seq$PlantID[Seq$PlantID==uids[i]])
flwr<-append(flwr,seq(1,len,1))
}
Seq$flower<-flwr
Seq$FlowerID <- paste0(Seq$PlantID, "-", Seq$flower)
dat_seq <- Seq[,c("Population", "LineID", "PlantID", "FlowerID", "Short_Stamens")]
# How many unique lines?
length(unique(dat_all$LineID))
# How many lines per population?
PerPop <- dat_seq %>% group_by(Population) %>%
summarize(NumLines = length(unique(LineID)), NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
# there are 3 or 4 lines per pop
# want flowers per pop info b/c that is what is used for population means
min(PerPop$NumFlwr)
# 18
max(PerPop$NumFlwr)
# 118
mean(PerPop$NumFlwr)
# 60.7
median(PerPop$NumFlwr)
# 63
# How many Plants and Flowers per line?
PerLine <- dat_seq %>% group_by(LineID) %>%
summarize(NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
min(PerLine$NumPlants)
# 1
max(PerLine$NumPlants)
# 4
mean(PerLine$NumPlants)
# 2.31
median(PerLine$NumPlants)
# 2
min(PerLine$NumFlwr)
# 1
max(PerLine$NumFlwr)
# 36 -- this represents 9 flowers per plant for 4 plants per line
mean(PerLine$NumFlwr)
# 15.9
median(PerLine$NumFlwr)
# 10
# what about flower per plant information?
PerPlant <- dat_seq %>% group_by(PlantID) %>%
summarize(NumFlwr = length(unique(FlowerID)))
min(PerPlant$NumFlwr)
# 1
max(PerPlant$NumFlwr)
# 9
mean(PerPlant$NumFlwr)
# 6.9
median(PerPlant$NumFlwr)
# 6
# How many unique lines?
length(unique(dat_seq$LineID))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
ByFlwr <- read.csv("data/SpanishMasterDataset_ByFlwr.csv")
# Tube is equivalent to the time point, so 1 is the first 10 ish flowers, 2 is from around the 20th flower produced, and 3 is around the 30th flower produced and that is why there are multiples from tube b/c multiple flowers collected at each time point
ByFlwr$Population <- as.factor(substr(ByFlwr$Population, start = 1, stop = 3))
ByFlwr$Matriline <- as.factor(ByFlwr$Matriline)
ByFlwr$Plant <- as.factor(ByFlwr$Plant)
ByFlwr$LineID <- as.factor(paste0(ByFlwr$Population, "-", ByFlwr$Matriline))
ByFlwr$PlantID <- as.factor(paste0(ByFlwr$LineID, "-", ByFlwr$Plant))
uids <- unique(ByFlwr$PlantID)
length(uids)
# 230 plants were phenotyped
# Make a unique ID for each flower in the dataset
flwr<-c()
for(i in 1:length(uids)){
len<-length(ByFlwr$PlantID[ByFlwr$PlantID==uids[i]])
flwr<-append(flwr,seq(1,len,1))
}
ByFlwr$flower<-flwr
ByFlwr$FlowerID <- paste0(ByFlwr$PlantID, "-", ByFlwr$flower)
dat_all <- ByFlwr[,c("Population", "LineID", "PlantID", "FlowerID", "NumShortStamens", "Notes")]
# How many planting blocks?
length(unique(ByFlwr$PlantingBlock))
# How many unique lines?
length(unique(dat_all$LineID))
# How many lines per population?
PerPop <- dat_all %>% group_by(Population) %>%
summarize(NumLines = length(unique(LineID)), NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
# there are 5 to 9 lines per pop
# want flowers per pop info b/c that is what is used for population means
min(PerPop$NumFlwr)
# 42
max(PerPop$NumFlwr)
#168
mean(PerPop$NumFlwr)
# 88.9
median(PerPop$NumFlwr)
#99.5
# How many Plants and Flowers per line?
PerLine <- dat_all %>% group_by(LineID) %>%
summarize(NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
min(PerLine$NumPlants)
# 1
max(PerLine$NumPlants)
# 4
mean(PerLine$NumPlants)
# 2.05
median(PerLine$NumPlants)
# 2
min(PerLine$NumFlwr)
# 1 -- only 1 flower for 1 plant for this line
# this is true for POB-10 and POB-19. both of them are also sequenced
max(PerLine$NumFlwr)
# 36 -- this represents 9 flowers per plant for 4 plants per line
mean(PerLine$NumFlwr)
# 12.7
median(PerLine$NumFlwr)
# 10
# what about flower per plant information?
PerPlant <- dat_all %>% group_by(PlantID) %>%
summarize(NumFlwr = length(unique(FlowerID)), meanSSN = mean(NumShortStamens), sdSSN = sd(NumShortStamens))
min(PerPlant$NumFlwr)
# 1
max(PerPlant$NumFlwr)
# 9
mean(PerPlant$NumFlwr)
# 6.2
median(PerPlant$NumFlwr)
# 6
mean(PerPlant$sdSSN, na.rm = TRUE)
# 0.368523
Seq <- read.csv("data/SpanishMasterDataset_Sequenced.csv")
# Reminder! Tube is equivalent to the time point, so 1 is the first 10 ish flowers, 2 is from around the 20th flower produced, and 3 is around the 30th flower produced and that is why there are multiples from tube b/c multiple flowers collected at each time point
# here Rep is equivalent to what Plant was in the all dataset
Seq$Population <- as.factor(substr(Seq$Population, start = 1, stop = 3))
Seq$Line <- as.factor(Seq$Line)
Seq$Plant <- as.factor(toupper(Seq$Rep))
Seq$LineID <- as.factor(paste0(Seq$Population, "-", Seq$Line))
# should be equivalent to SeqSampleID
Seq$PlantID <- as.factor(paste0(Seq$LineID, "-", Seq$Plant))
uids <- unique(Seq$PlantID)
length(uids)
# 141 plants were phenotyped
# Make a unique ID for each flower in the dataset
flwr<-c()
for(i in 1:length(uids)){
len<-length(Seq$PlantID[Seq$PlantID==uids[i]])
flwr<-append(flwr,seq(1,len,1))
}
Seq$flower<-flwr
Seq$FlowerID <- paste0(Seq$PlantID, "-", Seq$flower)
dat_seq <- Seq[,c("Population", "LineID", "PlantID", "FlowerID", "Short_Stamens")]
# How many unique lines?
length(unique(dat_seq$LineID))
# How many lines per population?
PerPop2 <- dat_seq %>% group_by(Population) %>%
summarize(NumLines = length(unique(LineID)), NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
# there are 3 or 4 lines per pop
# want flowers per pop info b/c that is what is used for population means
min(PerPop2$NumFlwr)
# 18
max(PerPop2$NumFlwr)
# 118
mean(PerPop2$NumFlwr)
# 60.7
median(PerPop2$NumFlwr)
# 63
# How many Plants and Flowers per line?
PerLine2 <- dat_seq %>% group_by(LineID) %>%
summarize(NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)))
min(PerLine2$NumPlants)
# 1
max(PerLine2$NumPlants)
# 4
mean(PerLine2$NumPlants)
# 2.31
median(PerLine2$NumPlants)
# 2
min(PerLine2$NumFlwr)
# 1
max(PerLine2$NumFlwr)
# 36 -- this represents 9 flowers per plant for 4 plants per line
mean(PerLine2$NumFlwr)
# 15.9
median(PerLine2$NumFlwr)
# 10
# what about flower per plant information?
PerPlant2 <- dat_seq %>% group_by(PlantID) %>%
summarize(NumFlwr = length(unique(FlowerID)))
min(PerPlant2$NumFlwr)
# 1
max(PerPlant2$NumFlwr)
# 9
mean(PerPlant2$NumFlwr)
# 6.9
median(PerPlant2$NumFlwr)
# 6
PerPlant <- PerPlant %>%
mutate(seSSN = sdSSn / sqrt(NumFlwr))
PerPlant <- PerPlant %>%
mutate(seSSN = sdSSN / sqrt(NumFlwr))
# 0.368523
mean(PerPlant$seSSN, na.rm = TRUE)
96/230
230-96
134/230
View(dat_all)
View(ByFlwr)
# How many lines per population?
PerPop <- dat_all %>% group_by(Population) %>%
summarize(NumLines = length(unique(LineID)), NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)), meanSSN = mean(NumShortStamens), sdSSN = sd(NumShortStamens))
View(PerPop)
mutate(PerLine, seSSN = sdSSN / sqrt(NumFlwr))
# How many Plants and Flowers per line?
PerLine <- dat_all %>% group_by(LineID) %>%
summarize(NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID), meanSSN = mean(NumShortStamens), sdSSN = sd(NumShortStamens)))
# How many Plants and Flowers per line?
PerLine <- dat_all %>% group_by(LineID) %>%
summarize(NumPlants = length(unique(PlantID)), NumFlwr = length(unique(FlowerID)), meanSSN = mean(NumShortStamens), sdSSN = sd(NumShortStamens))
mutate(PerLine, seSSN = sdSSN / sqrt(NumFlwr))
View(PerLine)
PerPop <- PerPop %>%
mutate(seSSN = sdSSN / sqrt(NumFlwr))
# 10
mean(PerLine$seSSN, na.rm = TRUE)
PerLine <- PerLine %>%
mutate(seSSN = sdSSN / sqrt(NumFlwr))
# 10
mean(PerLine$seSSN, na.rm = TRUE)
#99.5
mean(PerPop$seSSN, na.rm = TRUE)
summary(PerPop)
