rm(list = ls())
# so let's start a list of samples I'm using:
files <- c("NoCent.PlinkFiltering_Binary.c", "NoCent.PlinkFiltering_raw.c",  "NoCent.PlinkFiltering_Asin.c", "NoCent.PlinkFiltering_Elev.c", "allSNPs.PlinkFiltering_Asin.c", "allSNPs.PlinkFiltering_raw.c", "allSNPs.PlinkFiltering_Elev.c", "allSNPs.PlinkFiltering_Binary.c", "allSNPs.PlinkFiltering_raw_subset.c", "NoCent.PlinkFiltering_raw_subset.c","NoCent.PlinkFiltering_raw.c_testing" )
?qq
gwas_plots <- function(type, identifier, sig.level = 0.05){
##### Set filenames and read in file #####
filename = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/GemmaOutput_2022/", identifier, ".assoc.txt")
mplot_name = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/mplot_", identifier)
qqplot_name = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/qq_",identifier,".png")
results <- read.delim(file= filename, header = T, stringsAsFactors = F)
# reorganize dataframe - Note I am using the wald test now!
forplot <- data.frame("BP" = results$ps, "CHR" = results$chr, "P" = results$p_wald, "SNP" = results$rs)
forplot$fdr <- p.adjust(p= forplot$P, method = "fdr")
forplot$bon <- p.adjust(forplot$P, method = "bonferroni")
# how similar are these
min(forplot$fdr)
min(forplot$bon)
hist(forplot$fdr)
hist(forplot$bon)
# they are different, but it seems a smidge subtle for the raw phenotypes
##### QQ plot with qqman #####
png(qqplot_name)
qq(forplot$P)
dev.off()
###### Manhattan plot with qqman #####
#
#png(mplot_name)
#manhattan(forplot)
## takes a super long time because I"m not running it within dev so it is trying to show up on the screen
#dev.off()
#
###### manual plot #####
# prep to plot
don <- forplot %>%
# compute chromosome size in bp
group_by(CHR) %>%
summarize(chr_len=max(BP)) %>%
#calculate cumulative position of each chromosome (again in bp)
mutate(tot=cumsum(chr_len)-chr_len) %>%
dplyr::select(-chr_len) %>%
#add this info to the initial data set (so like adding new column and sorting by it)
left_join(forplot, ., by=c("CHR"="CHR")) %>%
#add cum position of each SNP
arrange(CHR, BP) %>%
mutate( psCum=BP+tot)
axisdf = don %>% group_by(CHR) %>% summarize(center=( max(psCum) + min(psCum) ) /2 )
#sig.level is set in the function line. is 0.05 default but not expecting hits above that.
bonferroni_sig <- 0.05/length(forplot$P)
# and plot. should make 3 plots.
mplot_fdr <- ggplot(don, aes(x=psCum, y=-log10(fdr))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(0.05), color = "blue", linetype = "dashed")+
geom_hline(yintercept = -log10(0.10), color = "yellow", linetype = "solid")+
scale_color_manual(values = rep(c("grey", "black"), 22)) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + #choosing not to set this
labs(x="Chromosome", y= "-log10(fdr adjusted wald p)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
ggsave(paste0(mplot_name, "_fdr.png"), plot = mplot_fdr, width = 7, height = 3, units = "in")
mplot_bon <- ggplot(don, aes(x=psCum, y=-log10(bon))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(0.05), color = "blue", linetype = "dashed")+
geom_hline(yintercept = -log10(0.10), color = "yellow", linetype = "solid")+
scale_color_manual(values = rep(c("grey", "black"), 22)) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) +
labs(x="Chromosome", y= "-log10(bonferroni adjusted wald p)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
ggsave(paste0(mplot_name, "_bonf.png"), plot = mplot_bon, width = 7, height = 3, units = "in")
mplot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
geom_hline(yintercept = -log10(sig.level), color = "red", linetype = "dotdash")+
scale_color_manual(values = rep(c("grey", "black"), 22)) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
ggsave(paste0(mplot_name,".png"), plot = mplot, width = 7, height = 3, units = "in")
print(paste0("Done making plots for: ", identifier))
}
library(qvalue)
install.packages('qvalue')
library(qvalue)
library(ggplot2)
library(dplyr)
library(qqman)
rm(list = ls())
# so let's start a list of samples I'm using:
files <- c("NoCent.PlinkFiltering_Binary.c", "NoCent.PlinkFiltering_raw.c",  "NoCent.PlinkFiltering_Asin.c", "NoCent.PlinkFiltering_Elev.c", "allSNPs.PlinkFiltering_Asin.c", "allSNPs.PlinkFiltering_raw.c", "allSNPs.PlinkFiltering_Elev.c", "allSNPs.PlinkFiltering_Binary.c", "allSNPs.PlinkFiltering_raw_subset.c", "NoCent.PlinkFiltering_raw_subset.c","NoCent.PlinkFiltering_raw.c_testing" )
gwas_plots <- function(type, identifier, sig.level = 0.05){
##### Set filenames and read in file #####
filename = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/GemmaOutput_2022/", identifier, ".assoc.txt")
mplot_name = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/mplot_", identifier)
qqplot_name = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/qq_",identifier,".png")
results <- read.delim(file= filename, header = T, stringsAsFactors = F)
# reorganize dataframe - Note I am using the wald test now!
forplot <- data.frame("BP" = results$ps, "CHR" = results$chr, "P" = results$p_wald, "SNP" = results$rs)
forplot$fdr <- p.adjust(p= forplot$P, method = "fdr")
forplot$bon <- p.adjust(forplot$P, method = "bonferroni")
# how similar are these
min(forplot$fdr)
min(forplot$bon)
hist(forplot$fdr)
hist(forplot$bon)
# they are different, but it seems a smidge subtle for the raw phenotypes
##### QQ plot with qqman #####
png(qqplot_name)
qq(forplot$P)
dev.off()
###### Manhattan plot with qqman #####
#
#png(mplot_name)
#manhattan(forplot)
## takes a super long time because I"m not running it within dev so it is trying to show up on the screen
#dev.off()
#
###### manual plot #####
# prep to plot
don <- forplot %>%
# compute chromosome size in bp
group_by(CHR) %>%
summarize(chr_len=max(BP)) %>%
#calculate cumulative position of each chromosome (again in bp)
mutate(tot=cumsum(chr_len)-chr_len) %>%
dplyr::select(-chr_len) %>%
#add this info to the initial data set (so like adding new column and sorting by it)
left_join(forplot, ., by=c("CHR"="CHR")) %>%
#add cum position of each SNP
arrange(CHR, BP) %>%
mutate( psCum=BP+tot)
axisdf = don %>% group_by(CHR) %>% summarize(center=( max(psCum) + min(psCum) ) /2 )
#sig.level is set in the function line. is 0.05 default but not expecting hits above that.
bonferroni_sig <- 0.05/length(forplot$P)
# and plot. should make 3 plots.
mplot_fdr <- ggplot(don, aes(x=psCum, y=-log10(fdr))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(0.05), color = "blue", linetype = "dashed")+
geom_hline(yintercept = -log10(0.10), color = "yellow", linetype = "solid")+
scale_color_manual(values = rep(c("grey", "black"), 22)) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + #choosing not to set this
labs(x="Chromosome", y= "-log10(fdr adjusted wald p)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
ggsave(paste0(mplot_name, "_fdr.png"), plot = mplot_fdr, width = 7, height = 3, units = "in")
mplot_bon <- ggplot(don, aes(x=psCum, y=-log10(bon))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(0.05), color = "blue", linetype = "dashed")+
geom_hline(yintercept = -log10(0.10), color = "yellow", linetype = "solid")+
scale_color_manual(values = rep(c("grey", "black"), 22)) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) +
labs(x="Chromosome", y= "-log10(bonferroni adjusted wald p)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
ggsave(paste0(mplot_name, "_bonf.png"), plot = mplot_bon, width = 7, height = 3, units = "in")
mplot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(sig.level), color = "red", linetype = "dotdash")+ # I want this to draw an fdr line
scale_color_manual(values = rep(c("grey", "black"), 22)) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
ggsave(paste0(mplot_name,".png"), plot = mplot, width = 7, height = 3, units = "in")
print(paste0("Done making plots for: ", identifier))
}
files
##### Subset Raw Phenotypes #####
# only include if less than 2 as mean short stamen number
gwas_plots(type = "All", identifier = "allSNPs.PlinkFiltering_raw_subset.c")
gwas_plots(type = "All", identifier = "allSNPs.PlinkFiltering_raw.c")
gwas_plots(type = "NoCent", identifier = "NoCent.PlinkFiltering_raw.c")
gwas_plots(type = "NoCent", identifier = "NoCent.PlinkFiltering_raw_subset.c")
##### Asin Phenotypes #####
gwas_plots(type = "All", identifier = "allSNPs.PlinkFiltering_Asin.c")
gwas_plots(type = "NoCent", identifier = "NoCent.PlinkFiltering_Asin.c")
##### Binary Phenotypes #####
gwas_plots(type = "All", identifier = "allSNPs.PlinkFiltering_Binary.c")
gwas_plots(type = "NoCent", identifier = "NoCent.PlinkFiltering_Binary.c")
##### Elevation! #####
gwas_plots(type = "All", identifier = "allSNPs.PlinkFiltering_Elev.c")
gwas_plots(type = "NoCent", identifier = "NoCent.PlinkFiltering_Elev.c")
knitr::opts_chunk$set(echo = TRUE)
# for testing
identifier <- "allSNPs.PlinkFiltering_raw.c"
sig.level <- 0.05
filename = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/GemmaOutput_2022/", identifier, ".assoc.txt")
fig_name = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/", identifier)
results <- read.delim(file= filename, header = T, stringsAsFactors = F)
forplot <- data.frame("BP" = results$ps, "CHR" = results$chr, "P" = results$p_wald, "SNP" = results$rs)
forplot$fdr <- p.adjust(p= forplot$P, method = "fdr")
#for point color...
forplot$fdr_col <- as.factor(CHR)
#for point color...
forplot$fdr_col <- as.factor(forplot$CHR)
forplot[forplot$fdr < 0.10, "fdr"] <- "B"
forplot <- data.frame("BP" = results$ps, "CHR" = results$chr, "P" = results$p_wald, "SNP" = results$rs)
forplot$fdr <- p.adjust(p= forplot$P, method = "fdr")
#for point color...
forplot$fdr_col <- as.factor(forplot$CHR)
forplot[forplot$fdr < 0.10, "fdr_col"] <- "B" # cutoff for this is between
forplot[forplot$fdr < 0.10, "fdr_col"] <- 6 # cutoff for this is between
#for point color...
forplot$fdr_col <- forplot$CHR
forplot[forplot$fdr < 0.10, "fdr_col"] <- 6 # cutoff for this is between
forplot[forplot$fdr < 0.05, "fdr_col"] <- 7
forplot$fdr_col <- as.factor(forplot$fdr_col)
View(forplot)
forplot$bon <- p.adjust(forplot$P, method = "bonferroni")
###### manual plot #####
# prep to plot
don <- forplot %>%
# compute chromosome size in bp
group_by(CHR) %>%
summarize(chr_len=max(BP)) %>%
#calculate cumulative position of each chromosome (again in bp)
mutate(tot=cumsum(chr_len)-chr_len) %>%
dplyr::select(-chr_len) %>%
#add this info to the initial data set (so like adding new column and sorting by it)
left_join(forplot, ., by=c("CHR"="CHR")) %>%
#add cum position of each SNP
arrange(CHR, BP) %>%
mutate( psCum=BP+tot)
axisdf = don %>% group_by(CHR) %>% summarize(center=( max(psCum) + min(psCum) ) /2 )
#sig.level is set in the function line. is 0.05 default but not expecting hits above that.
bonferroni_sig <- sig.level/length(forplot$P)
mplot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(fdr.line), color = "red", linetype = "dotdash")+
scale_color_manual(values = c("grey", "black", "grey", "black", "grey", "chartreuse", "darkorchid1"), 22)) +
mplot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(fdr.line), color = "red", linetype = "dotdash")+
scale_color_manual(values = c("grey", "black", "grey", "black", "grey", "chartreuse", "darkorchid1"), 22) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
# merge manhattan and qq into a single thing??
qqplot <- qq(forplot$P)
library(ggpubr)
?ggarrange
# would need the package that let's me make multi facet figures
# then set 2/3 or 3/4 spaces as mplot, and one as qq, then save the merged file
final_fig <- ggarrange(fig, nrow = 1, ncol = 2, widths = c(3,1))
# would need the package that let's me make multi facet figures
# then set 2/3 or 3/4 spaces as mplot, and one as qq, then save the merged file
final_fig <- ggarrange(mplot, qqplot, nrow = 1, ncol = 2, widths = c(3,1))
ggsave(paste0(fig_name,".png"), plot = final_fig, width = 7, height = 3, dpi = 700, units = "in")
m_plot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=as.factor(CHR)), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(fdr.line), color = "red", linetype = "dotdash")+
scale_color_manual(values = c("grey", "black", "grey", "black", "grey", "chartreuse", "darkorchid1"), 22) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
rm(mplot)
m_plot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=fdr_col), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(fdr.line), color = "red", linetype = "dotdash")+
scale_color_manual(values = c("grey", "black", "grey", "black", "grey", "chartreuse", "darkorchid1"), 22) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
# would need the package that let's me make multi facet figures
# then set 2/3 or 3/4 spaces as mplot, and one as qq, then save the merged file
final_fig <- ggarrange(m_plot, qqplot, nrow = 1, ncol = 2, widths = c(3,1))
?qq
# merge manhattan and qq into a single thing??
qqplot <- qqman::qq(forplot$P)
qqnorm(forplot$BP)
m_plot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=fdr_col), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(fdr.line), color = "red", linetype = "dotdash")+
scale_color_manual(values = c("grey", "black", "grey", "black", "grey", "chartreuse", "darkorchid1"), 22) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
m_plot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=fdr_col), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(fdr.line), color = "red", linetype = "dotdash")+
scale_color_manual(values = c("grey", "black", "grey", "black", "grey", "chartreuse", "darkorchid1"), 22) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
ggsave(paste0(fig_name,".png"), plot = m_plot, width = 7, height = 3, dpi = 700, units = "in")
manhattan_highlight <- function(identifier, fdr.line, sig.level = 0.05){
##### Set filenames and read in file #####
filename = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/GemmaOutput_2022/", identifier, ".assoc.txt")
fig_name = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/", identifier)
results <- read.delim(file= filename, header = T, stringsAsFactors = F)
# reorganize dataframe
forplot <- data.frame("BP" = results$ps, "CHR" = results$chr, "P" = results$p_wald, "SNP" = results$rs)
forplot$fdr <- p.adjust(p= forplot$P, method = "fdr")
#for point color...
forplot$fdr_col <- forplot$CHR
forplot[forplot$fdr < 0.10, "fdr_col"] <- 6
# allSNPs raw: cutoff for this is between 9.651559e-02 (6) and 1.004850e-01 (1)
forplot[forplot$fdr < 0.05, "fdr_col"] <- 7
# allSNPs raw: cutoff for this is between 7.323552e-02 (6) and 4.269675e-03(7)
forplot$fdr_col <- as.factor(forplot$fdr_col)
#make the shared hits a 0 or something??
forplot$bon <- p.adjust(forplot$P, method = "bonferroni")
###### manual plot #####
# prep to plot
don <- forplot %>%
# compute chromosome size in bp
group_by(CHR) %>%
summarize(chr_len=max(BP)) %>%
#calculate cumulative position of each chromosome (again in bp)
mutate(tot=cumsum(chr_len)-chr_len) %>%
dplyr::select(-chr_len) %>%
#add this info to the initial data set (so like adding new column and sorting by it)
left_join(forplot, ., by=c("CHR"="CHR")) %>%
#add cum position of each SNP
arrange(CHR, BP) %>%
mutate( psCum=BP+tot)
axisdf = don %>% group_by(CHR) %>% summarize(center=( max(psCum) + min(psCum) ) /2 )
#sig.level is set in the function line. is 0.05 default but not expecting hits above that.
bonferroni_sig <- sig.level/length(forplot$P)
# and plot. should just make the 1 plot.
m_plot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=fdr_col), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(fdr.line), color = "red", linetype = "dotdash")+
scale_color_manual(values = c("grey", "black", "grey", "black", "grey", "chartreuse", "darkorchid1"), 22) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
## merge manhattan and qq into a single thing??
# this doesn't work as written because the ggplot is a grid object and the qqplot is not a grid object, so issues ensue.
#qqplot <- qqman::qq(forplot$P)
## would need the package that let's me make multi facet figures
## then set 2/3 or 3/4 spaces as mplot, and one as qq, then save the merged file
#final_fig <- ggarrange(m_plot, qqplot, nrow = 1, ncol = 2, widths = c(2,1))
##ggplot(forplot, aes(sample = P)+
##geom_qq()+
##geom_qq_line()+
##  labs(x = "Expected", y = "Observed")+
##  theme_bw()
ggsave(paste0(fig_name,".png"), plot = m_plot, width = 7, height = 3, dpi = 700, units = "in")
print(paste0("Done making plot for: ", identifier))
}
manhattan_highlight <- function(identifier, sig.level = 0.05){
# add fdr.line as an object?
##### Set filenames and read in file #####
filename = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/GemmaOutput_2022/", identifier, ".assoc.txt")
fig_name = paste0("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/", identifier)
results <- read.delim(file= filename, header = T, stringsAsFactors = F)
# reorganize dataframe
forplot <- data.frame("BP" = results$ps, "CHR" = results$chr, "P" = results$p_wald, "SNP" = results$rs)
forplot$fdr <- p.adjust(p= forplot$P, method = "fdr")
#for point color...
forplot$fdr_col <- forplot$CHR
forplot[forplot$fdr < 0.10, "fdr_col"] <- 6
# allSNPs raw: cutoff for this is between 9.651559e-02 (6) and 1.004850e-01 (1)
forplot[forplot$fdr < 0.05, "fdr_col"] <- 7
# allSNPs raw: cutoff for this is between 7.323552e-02 (6) and 4.269675e-03(7)
forplot$fdr_col <- as.factor(forplot$fdr_col)
#make the shared hits a 0 or something??
forplot$bon <- p.adjust(forplot$P, method = "bonferroni")
###### manual plot #####
# prep to plot
don <- forplot %>%
# compute chromosome size in bp
group_by(CHR) %>%
summarize(chr_len=max(BP)) %>%
#calculate cumulative position of each chromosome (again in bp)
mutate(tot=cumsum(chr_len)-chr_len) %>%
dplyr::select(-chr_len) %>%
#add this info to the initial data set (so like adding new column and sorting by it)
left_join(forplot, ., by=c("CHR"="CHR")) %>%
#add cum position of each SNP
arrange(CHR, BP) %>%
mutate( psCum=BP+tot)
axisdf = don %>% group_by(CHR) %>% summarize(center=( max(psCum) + min(psCum) ) /2 )
#sig.level is set in the function line. is 0.05 default but not expecting hits above that.
bonferroni_sig <- sig.level/length(forplot$P)
# and plot. should just make the 1 plot.
m_plot <- ggplot(don, aes(x=psCum, y=-log10(P))) +
geom_point( aes(color=fdr_col), alpha=0.8, size=1.3)+
geom_hline(yintercept = -log10(bonferroni_sig), color = "blue", linetype = "dashed")+
#geom_hline(yintercept = -log10(fdr.line), color = "red", linetype = "dotdash")+
scale_color_manual(values = c("grey", "black", "grey", "black", "grey", "chartreuse", "darkorchid1"), 22) +
scale_x_continuous( label = axisdf$CHR, breaks = axisdf$center ) +
#scale_y_continuous(expand = c(0,0), limits = c(0, ylim)) + # might add this back in later for better comparison
labs(x="Chromosome", y= "-log10( wald P)")+
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
## merge manhattan and qq into a single thing??
# this doesn't work as written because the ggplot is a grid object and the qqplot is not a grid object, so issues ensue.
#qqplot <- qqman::qq(forplot$P)
## would need the package that let's me make multi facet figures
## then set 2/3 or 3/4 spaces as mplot, and one as qq, then save the merged file
#final_fig <- ggarrange(m_plot, qqplot, nrow = 1, ncol = 2, widths = c(2,1))
##ggplot(forplot, aes(sample = P)+
##geom_qq()+
##geom_qq_line()+
##  labs(x = "Expected", y = "Observed")+
##  theme_bw()
ggsave(paste0(fig_name,".png"), plot = m_plot, width = 7, height = 3, dpi = 700, units = "in")
print(paste0("Done making plot for: ", identifier))
}
##### Raw Phenotypes #####
manhattan_highlight(identifier = "allSNPs.PlinkFiltering_raw.c")
manhattan_highlight(identifier = "NoCent.PlinkFiltering_raw.c")
##### Subset Raw Phenotypes #####
# only include if less than 2 as mean short stamen number
manhattan_highlight(identifier = "allSNPs.PlinkFiltering_raw_subset.c")
manhattan_highlight(identifier = "NoCent.PlinkFiltering_raw_subset.c")
##### Asin Phenotypes #####
manhattan_highlight(identifier = "allSNPs.PlinkFiltering_Asin.c")
manhattan_highlight(identifier = "NoCent.PlinkFiltering_Asin.c")
##### Binary Phenotypes #####
manhattan_highlight(identifier = "allSNPs.PlinkFiltering_Binary.c")
manhattan_highlight(identifier = "NoCent.PlinkFiltering_Binary.c")
##### Elevation! #####
manhattan_highlight(identifier = "allSNPs.PlinkFiltering_Elev.c")
manhattan_highlight(identifier = "NoCent.PlinkFiltering_Elev.c")
citation(ggpubr)
library(ggpubr)
citation(ggpubr)
citation('ggpubr')
