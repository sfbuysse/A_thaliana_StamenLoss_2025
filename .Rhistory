labs(x= "Elevation (m)", y= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = topo.colors(16))+
#scale_color_manual(name = "Population",
#                   labels = comp$label,
#                   values = c(rep(c("red", "orange", "green", "blue"), times = c(4,4,4,4))))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
# with a linear fit line of elevation explaining mean pi
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Mean.pi, shape = as.factor(pop), fill= Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit), linetype = "solid",
alpha = 0.7, linewidth = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit+1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.3, linewidth = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit-1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.5, linewidth = 0.75)+
labs(x= "Elevation (m)", y= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = topo.colors(16))+
#scale_color_manual(name = "Population",
#                   labels = comp$label,
#                   values = c(rep(c("red", "orange", "green", "blue"), times = c(4,4,4,4))))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
ggsave(filename ="C:/Users/Sophia/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/PiPerPop_topo.png", height = 7, width = 9)
# with a linear fit line of elevation explaining mean pi
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Mean.pi, shape = as.factor(pop), fill= Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit), linetype = "solid",
alpha = 0.7, linewidth = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit+1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.3, linewidth = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit-1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.5, linewidth = 0.75)+
labs(x= "Elevation (m)", y= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = topo.colors(16))+
#scale_color_manual(name = "Population",
#                   labels = comp$label,
#                   values = c(rep(c("red", "orange", "green", "blue"), times = c(4,4,4,4))))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
ggsave(filename ="C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/PiPerPop_topo.png", height = 7, width = 9)
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Mean.pi, shape = as.factor(pop), fill= Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit), linetype = "solid",
alpha = 0.7, linewidth = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit+1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.3, linewidth = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit-1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.5, linewidth = 0.75)+
labs(x= "Elevation (m)", y= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
#scale_color_manual(name = "Population",
#                   labels = comp$label,
#                   values = c(rep(c("red", "orange", "green", "blue"), times = c(4,4,4,4))))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 16),
legend.text = element_text(color = "black", size = 16),
axis.title = element_text(color = "black", size = 16),
axis.text = element_text(color = "black", size = 16),
legend.spacing.y = unit(0.03, "cm"))
ggsave(filename ="C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/PiPerPop_terrain.png", height = 7, width = 9)
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Mean.pi, shape = as.factor(pop), fill= Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit), linetype = "solid",
alpha = 0.7, linewidth = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit+1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.3, linewidth = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit-1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.5, linewidth = 0.75)+
labs(x= "Elevation (m)", y= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
#scale_color_manual(name = "Population",
#                   labels = comp$label,
#                   values = c(rep(c("red", "orange", "green", "blue"), times = c(4,4,4,4))))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
ggsave(filename ="C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/PiPerPop_terrain.png", height = 7, width = 9)
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop), col= as.factor(pop)), size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(0, 1, 2, 5), times = 4), 0))+ # extra 0 not needed unless all is included
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop), col= as.factor(pop)), size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Population", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25)), times = 4)))+
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop), col= as.factor(pop)), size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Population", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25)), times = 4))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop), col= as.factor(pop)), size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25)), times = 4))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop), col= Elev_m), size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25)), times = 4))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop)), size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25)), times = 4))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop)), size = 5, stroke = 1.75)
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop)), size = 5, stroke = 1.75)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
#          alpha = 0.7, size = 1.25)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
#          alpha = 0.3, size = 0.75)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
#          alpha = 0.5, size = 0.75)+
#labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
#scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25)), times = 4))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Mean.pi, shape = as.factor(pop), fill= Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit), linetype = "solid",
alpha = 0.7, linewidth = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit+1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.3, linewidth = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.pi.el.fit-1.96*pred.pi.el.se.fit), linetype = "solid",
alpha = 0.5, linewidth = 0.75)+
labs(x= "Elevation (m)", y= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop)), size = 5, stroke = 1.75)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
#          alpha = 0.7, size = 1.25)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
#          alpha = 0.3, size = 0.75)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
#          alpha = 0.5, size = 0.75)+
#labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
#scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop)), size = 5, stroke = 1.75)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
#          alpha = 0.7, size = 1.25)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
#          alpha = 0.3, size = 0.75)+
#geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
#          alpha = 0.5, size = 0.75)+
#labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
#scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop)), size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
#scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop), fill = Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop), fill = Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggsave(filename ="C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/MeanSSNByElev_terrain.png", height = 7, width = 9)
### ssn by elevation
ggplot(comp)+
geom_point(data=comp, aes(x=Elev_m, y=Full_PopFlwrMean, shape = as.factor(pop), fill = Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit+1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = newd1, y = pred.ssn.el.fit-1.96*pred.ssn.el.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(x= "Elevation (m)", y= "Mean Short Stamen Number - Full Phenotype Set", title = "")+
scale_fill_gradientn(name = "Elevation", colours = topo.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20))
ggsave(filename ="C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/MeanSSNByElev_topo.png", height = 7, width = 9)
### SSN by Pi
ggplot(comp)+
geom_point(data=comp, aes(y=Seq_PopFlwrMean, x=Mean.pi, shape = as.factor(pop), fill = Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit+1.96*pred.pi.ssn.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit-1.96*pred.pi.ssn.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(y="Mean Short Stamen Number - Sequenced Only" , x= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
### SSN by Pi
ggplot(comp)+
geom_point(data=comp, aes(y=Seq_PopFlwrMean, x=Mean.pi, shape = as.factor(pop), fill = Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit+1.96*pred.pi.ssn.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit-1.96*pred.pi.ssn.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(y="Mean Short Stamen Number - Sequenced Only" , x= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
ggsave(filename ="C:/Users/Sophia/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/SSNbyPi_terrain.png", height = 7, width = 9)
### SSN by Pi
ggplot(comp)+
geom_point(data=comp, aes(y=Seq_PopFlwrMean, x=Mean.pi, shape = as.factor(pop), fill = Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit+1.96*pred.pi.ssn.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit-1.96*pred.pi.ssn.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(y="Mean Short Stamen Number - Sequenced Only" , x= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = terrain.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
ggsave(filename ="C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/SSNbyPi_terrain.png", height = 7, width = 9)
### SSN by Pi
ggplot(comp)+
geom_point(data=comp, aes(y=Seq_PopFlwrMean, x=Mean.pi, shape = as.factor(pop), fill = Elev_m), col = "black", size = 5, stroke = 1.75)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit), linetype = "solid",
alpha = 0.7, size = 1.25)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit+1.96*pred.pi.ssn.se.fit), linetype = "solid",
alpha = 0.3, size = 0.75)+
geom_line(dat = forplot2, aes(x = Mean.pi, y = pred.pi.ssn.fit-1.96*pred.pi.ssn.se.fit), linetype = "solid",
alpha = 0.5, size = 0.75)+
labs(y="Mean Short Stamen Number - Sequenced Only" , x= "Mean Pi", title = "")+
scale_fill_gradientn(name = "Elevation", colours = topo.colors(10))+
scale_shape_manual(name = "Population",
labels = comp$label,
values = c(rep(c(22, 21, 24, 23, 25), times = 4)))+
theme_classic()+
theme(
legend.title = element_text(color = "black", size = 20),
legend.text = element_text(color = "black", size = 20),
axis.title = element_text(color = "black", size = 20),
axis.text = element_text(color = "black", size = 20),
legend.spacing.y = unit(0.03, "cm"))
ggsave(filename ="C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/Figures/ManuscriptFigs/SSNbyPi_topo.png", height = 7, width = 9)
?cor()
PIN9 <- read.delim("C:/Users/Sophie/Michigan State University/Conner, Jeffrey - SophieAnalyses/FastQC/PIN9_CGAGGCTG-TAGATCGC_sorted_coverage.txt", header=FALSE)
# name the columns
colnames(PIN9) <- c("Chr", "Pos", "Coverage")
# do the 6 things with chloroplast and mitochondria
avg_all <- mean(PIN9$Coverage)
med_all <- median(PIN9$Coverage)
#how many rows?
tot <- nrow(PIN9)
one <- nrow(PIN9[PIN9$Coverage >= 1, ])
four <- nrow(PIN9[PIN9$Coverage >= 4, ])
ten <- nrow(PIN9[PIN9$Coverage >= 10, ])
# let's see the percentages
# at least one
one / tot
# at least four
print (four / tot)
# at least ten
print(ten / tot)
?data.frame
# a final data frame I would want could look like:
df <- data.frame(tot, one, four, ten, avg_all, med_all)
View(df)
# do the 6 things without chloroplast and mitochondria
sub_PIN9 <- PIN9[PIN9$Chr %in% c("Chr1", "Chr2", "Chr3", "Chr4", "Chr5"), ]
# then immediately remove the big one for space
rm(PIN9)
avg_sub <- mean(sub_PIN9$Coverage)
med_sub <- median(sub_PIN9$Coverage)
#how many rows?
tot_sub <- nrow(sub_PIN9)
one_sub <- nrow(sub_PIN9[sub_PIN9$Coverage >= 1, ])
four_sub <- nrow(sub_PIN9[sub_PIN9$Coverage >= 4, ])
ten_sub <- nrow(sub_PIN9[sub_PIN9$Coverage >= 10, ])
# let's see the percentages
# at least one
print(one_sub / tot_sub)
# at least four
print (fou_subr / tot_sub)
# at least four
print (four_sub / tot_sub)
# at least ten
print(ten_sub / tot_sub)
# a final data frame I would want could look like:
df_sub <- data.frame(tot_sub, one_sub, four_sub, ten_sub, avg_sub, med_sub)
View(df)
View(df_sub)
tot_sub / tot
